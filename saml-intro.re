= SAMLって何だっけ？

本章では筆者のSAML復習を兼ねてSAMLそのものについて説明します。実際にSAMLを使う機会がない方にも、その意義がなんとなく分かっていただければ幸いです。

最初にまずSAMLから離れてSingle Sign On（SSO）とそのメリットを考えます。その上で、SSOの一手法であるSAMLが類似技術がある中で、なぜ特定の界隈で使われ続けるのかを説明します。

== Single Sign On

GoogleのサービスでGmail利用中にGoogle Calendarを開くと、Gmailのログイン情報を使いまわしてくれます。仮にGmail, Google Calendar, Google Spreadsheetなど、その他すべてのサービスでユーザ名とパスワード（とOTP）を聞かれたらめんどくさくてたまりません。

Googleは一社で上記のサービスを提供しているので、社内での調整を行えばサービス間でユーザのIDを共有出来るようになります。あるブラウザで一度ログインしたら、そのログイン情報を複数のGoogle内サービスで使いまわすのは（比較的）簡単です。単に同じユーザ名とパスワードを使いまわせるだけでなく「一度ログインしたらそのログイン情報をそのまま別のサービスで引き継げる（再入力せずに済む）」のがSingle Sign Onと呼ばれる仕組みの良さです。

Googleのような一社が複数のサービスを提供するのではなく、複数の異なる組織間でIDを受け渡すとなると、話は複雑になります。

ある会社（A社）が、社員に次の3つのオンラインサービスを社内アカウントを使って提供したいと考えたとしましょう。

 * X社が提供する、社内情報共有のためのグループウェアサービス
 * Y社が提供する、社員の自己学習を支援するためのオンライン教育サービス
 * Z社が提供する、電子ジャーナルダウンロードサービス

A社は社内アカウントを管理し、サービスは異なる会社と別々にライセンス契約を結びます。この状態で、X社・Y社・Z社のサービス間でSSOを実現するには、Active DirectoryやLDAPといったディレクトリサービスで社内アカウントを一元管理しているだけでは十分ではありません。3つのサービス間でのSSOを実現する場合には、ブラウザ・HTTPのレベルでID連携を行えるプロトコルが必要になります。

異なる組織間でID連携を行う議論を簡略化すると、プレイヤーは大きく分けて2つに分かれます@<fn>{about_ap}。

: Service Provider（SP）
   実際にサービスを提供する側。Identity Providerに認証を要求し、認証が成功時にはそのユーザ情報（の一部）を受け取り、サービスを提供する。Identity Providerに依存（Rely）するので、Relying Partyという表現が使われることも多いが、本稿ではSAML用語のSPを使う。
: Identity Provider（IdP）
   ID（ユーザ情報）をサービスに提供する側。ユーザを認証する。認証方法はIdPの一存で決まるが、SAMLではSPはどのような方法で認証されたかの情報を受け取れることになっている。当然ながら、よくあるのはパスワード認証。SPと同じく、IdPもSAML用語だが、他プロトコルでもIdPという表現は目にする。

前述の例ではA社がIdP、X社・Y社・Z社がSPとなります。この2種類のプレイヤーの間でどうユーザの秘密情報をやりとりするかを決めなければなりません。

//footnote[about_ap][IdPに属性情報を提供するプレイヤーを「Attribute Provider（AP）」として分けて議論するケースもありますが、本書では省略してIdPの一部としています。]

== SAMLを採用する理由

ユーザ登録が自由に行えるようなWebサービスのID連携では、Open IDやOAuth@<fn>{authn_not_authz}系統のプロトコルが広く使われることが多いです。一方、特にビジネスが関わるサービスではSAMLの存在感が大きくなります。Enterprise版ソフトウェアのサポート欄に「SAML対応」なんて書いてあることもあります。

//footnote[authn_not_authz][正確にはOAuthは認証の仕組みじゃなくて認可の仕組みですが、IdPとして動作することはします。正確な議論はここでは割愛……]

OpenIDやOAuthでは、ID情報を与える相手（SP）が信頼のおける相手なのかを事前にチェックすることについて、あまり厳密ではありません。また、SPが受け取るユーザIDはIdPから来たことまではわかるとしても、信頼できるユーザなのかどうかまでは分かりません。例えば一人で複数のアカウントを作れたりするサービスがよく有りますので「お一人様1回だけ」みたいな制約に実効性を持たせるには工夫が必要です。

「（IdP名）でログイン」ボタンを設置したサービス（SP）は、そのIdPを使うことをSPとしてユーザに許可したことになります。大抵の場合、サービス設計者は、そのIdPのアカウントでログインしたユーザ自体を信用出来ない前提でサービス設計を考える必要があります。ユーザが善意の利用者である可能性のみならず、攻撃者やボットであることも想定する必要があります。重要なリソースを提供する前には、SPでIdPの認証に加えてもう一段階チェックを入れる必要があるかもしれません。

またIdP側から見たSPの選定も、ある意味で「雑」です。ID連携を許す際に、OpenID・OAuth等におけるIdPは相手SPを厳しく事前審査したりしません。もちろん悪意のあるサービスと分かればすぐさま止められるように準備しておきますが、基本的にはかなり自由にサービス連携出来るように、ID連携機能を提供しています。そのような事情を理解した上で、ユーザも自己責任で「〜〜でログイン」ボタンを押して、ID連携を介したSP側サービスを利用することになります。ヘンなサービスとID連携してしまうと、最悪の場合には個人情報が抜き取られたりしてしまいますので、ユーザは注意する必要があります。

「Webのためのプロトコル」という表現を目にしたことがありますが、まさにその通り。自由にサービス間連携を促すのがOpenID・OAuthの基本的な背景にある思想ではないかと思います。

一方、SAMLの根本的な考え方の根本にあるのは「社内（組織内）にサービスを導入するんだけど、楽にログイン管理（SSO）できないかな」という発想です。例えば前述の「A社がX社・Y社・Z社のサービスを導入するケース」が当てはまります。

社員の情報を収めるLDAPやActive Directoryを外部サービスに無防備に晒す会社はありません。それと同様で、SAMLのIdPを外部サービスに対して無防備に晒すことも通常ありません。外部サービスが「ID連携したい」とHTTPリクエストを送ってきても、基本的には全部お断りです。

その代わりにIdP運営側は、事前に信頼する相手サービスをチェック・選別し、そのサービスと明示的な契約を通すなどして「信頼」することを宣言して、初めてID連携を許可します。IdPがSPを相応に「信頼に足る」相手と判断しなければIdPはID連携を行いません。逆も然りで、SP運営者側も同じように信頼に足るIdPを管理し、サービス提供するIdPを限定します。

つまり、SAMLでは双方がお互いを明示的に信頼して初めて、SP・IdP間のID連携が可能となります。信頼したIdP・SPの関係を、SAMLではトラストサークル（信頼の環、Circle of Trust）と呼びます。この基本的な仕組みにより、IdPに登録されているユーザ情報は確かなものであることをIdPが保証し、SPはその保証に基づいて、より確かなサービスを提供することが期待出来るようになります。

ここでSAMLを広く活用している国内事例の一つとして「学術認証フェデレーション」（学認、GakuNin）を紹介しておきます。これは国立情報学研究所（NII）の事業で、IdPとしての大学（や学術系組織）とサービスを提供する企業等のSPを結びつける公開・共通のトラストサークルを構築するものです。

「学認」のトラストサークルにおいては、IdPでの認証を経由してSPを訪れるユーザは、その大学に在籍している・関係していることを大学が保証しているユーザとなります。大学名とユーザ属性も当然確かなはずですので、SPである企業側は、それを前提に例えば「学生さんに限って無料でこのサービスを追加で提供します」といった特別なサービスも提供出来ます。あるいは「この大学からは年間契約料をもらってるので、そこから来たユーザは有料の電子ジャーナルを無料で閲覧できます」なんていう判定も、SAMLを介することで理屈上可能となります。

筆者は「学認」の関係者ではないので憶測ですが、同事業では、トラストサークルを広げつつIdP・SP双方の運営レベルを引き上げることを通じて、ID連携技術の浸透とID連携を必要とする運用母体のレベル向上を目指しているように見えます。結果として、トラストサークル運用に関する社会全体の理解度の向上も促せる……とまで考えているかは分かりませんが、そういう効果は見込めると思います。

今後「電子政府」のようなお話が国内で本格化する際にも、SAMLのようなトラストサークルに基づいたID連携の考え方は重要になってくるでしょう。以上、SAMLの存在意義がなんとなく分かっていただければ幸甚です。@<fn>{correct_me}

//footnote[correct_me][正しいと信じて書いていますが、もし説明が誤ってたりいたり、不適切な論理飛躍等がありましたらお知らせください。この章に限らず。]


